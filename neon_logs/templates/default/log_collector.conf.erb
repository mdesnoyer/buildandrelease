# The source is an avro source
agent.sources.<%= @s %>.type = avro
agent.sources.<%= @s %>.channels = <%= @c %>
agent.sources.<%= @s %>.bind = <%= @collector_host %>
agent.sources.<%= @s %>.port = <%= @collector_port %>
agent.sources.<%= @s %>.interceptors =  addtime
agent.sources.<%= @s %>.interceptors.addtime.type = timestamp
agent.sources.<%= @s %>.interceptors.addtime.preserveExisting = true

# The channel is in memory because it will be buffered on disk before going to S3
agent.channels.<%= @c %>.type = memory
agent.channels.<%= @c %>.capacity = 100000
agent.channels.<%= @c %>.transactionCapacity = 1000

# The sink goes to s3
agent.sinks.<%= @k %>.type = hdfs
agent.sinks.<%= @k %>.channel = <%= @c %>
agent.sinks.<%= @k %>.hdfs.path = <%= @s3_log_path %>
agent.sinks.<%= @k %>.hdfs.codeC = <%= @compression %>
agent.sinks.<%= @k %>.hdfs.fileType = CompressedStream
agent.sinks.<%= @k %>.hdfs.filePrefix = <%= @log_type %>
agent.sinks.<%= @k %>.hdfs.threadsPoolSize = 100
agent.sinks.<%= @k %>.hdfs.rollSize = <%= @max_log_size %>
agent.sinks.<%= @k %>.hdfs.rollCount = 0
agent.sinks.<%= @k %>.hdfs.rollInterval = <%= @max_log_rolltime %>
agent.sinks.<%= @k %>.hdfs.idleTimeout = 1800
agent.sinks.<%= @k %>.hdfs.batchSize = <%= @s3_flush_batch_size %>
agent.sinks.<%= @k %>.serializer = <%= @output_serializer %>

<% if @output_serializer == 'org.apache.flume.serialization.AvroEventSerializer$Builder' %>
agent.sinks.<%= @k %>.serializer.compressionCodec = snappy
<% end %>