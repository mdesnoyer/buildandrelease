
# Define the possible sinks. They are in a failover group where the collector 
# ips are first.
agent.sinkgroups.<%= @kg %>.processor.type = failover
agent.sinkgroups.<%= @kg %>.sinks = <%= @sinks.map{ |x| x[:name]}.join(" ") %>
<% @sinks.each do |sink|  %>
  agent.sinks.<%= sink[:name] %>.type = avro
  agent.sinks.<%= sink[:name] %>.channel = <%= @c %>
  agent.sinks.<%= sink[:name] %>.hostname = <%= sink[:ip] %>
  agent.sinks.<%= sink[:name] %>.port = <%= @collector_port %>
  agent.sinkgroups.<%= @kg %>.priority.<%= sink[:name] %>.priority = <%= sink[:priority] %>
<% end %>

# The source is an thrift source
agent.sources.<%= @s %>.type = thrift
agent.sources.<%= @s %>.channels = <%= @c %>
agent.sources.<%= @s %>.port = <%= @thrift_port %>
agent.sources.<%= @s %>.bind = localhost

# Add metadata to the event
agent.sources.<%= @s %>.interceptors = addhost addtype
agent.sources.<%= @s %>.interceptors.addhost.type = static
agent.sources.<%= @s %>.interceptors.addhost.key = srchost
agent.sources.<%= @s %>.interceptors.addhost.value = <%= @hostname %>
#agent.sources.<%= @s %>.interceptors.addtime.type = timestamp
#agent.sources.<%= @s %>.interceptors.addtime.preserveExisting = true
agent.sources.<%= @s %>.interceptors.addtype.type = static
agent.sources.<%= @s %>.interceptors.addtype.key = logtype
agent.sources.<%= @s %>.interceptors.addtype.value = <%= @log_type %>

# The channel is in memory
agent.channels.<%= @c %>.type = memory
agent.channels.<%= @c %>.capacity = 100000
agent.channels.<%= @c %>.transactionCapacity = 1000